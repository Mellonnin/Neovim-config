-- base
("n") leader-s          find and replace all under cursor
("n") P                 paste before cursor
("n") N                 cerca termine precedente
("n") n                 cerca termine successivo
("n") J                 join linea sotto
("v") J                 sposta la riga sotto
("v") K                 sposta la riga sopra
("v") H                 sposta la riga a sinistra
("v") L                 sposta la riga a destra
("n") -                 ritorna al file explorer, nel file explorer va alla directory superiore
("n") leader-sl         apre la lista dei mesaggi diagnostici della pagina con quickfix
("n") U                 redo changes
("n") %                 find the next bracket on this line matching or predecessor directive
("i") ctrl-o            in insert permette di avere un comando di normal solo una volta e poi ti porta in insert
("n") 0			        to the first character of the line. 
("n") _			        to the first non-blank character of the line.
("n") $	                salta alla fine della riga rimanendo in n-mode 
("n") gg		        move to the top of the file 
("n") G			        move to the bottom of the file 
("n") d	                delete one line
("n") D	                delete to the end of the line
("n") y/d/v n           delete/yank/highlight to the next search pattern match
("n") y/d/v N           delete/yank/highlight to the previous search pattern match
("n") y/d/v $           delete/yank/highlight/jump all after curcor (incluso)
("n") y/d/v 0           delete/yank/highlight/jump all before cursor (escluso)
("n") y/d/v F<char>     delete/yank/highlight/jump all before until <char> (incluso)
("n") y/d/v T<char>     delete/yank/highlight/jump all before until <char> (escluso)
("n") y/d/v f<char>     delete/yank/highlight/jump all after until <char> (incluso) 
("n") y/d/v t<char>     delete/yank/highlight/jump all after until <char> (escluso)
("n") y/d/v b           delete/yank/highlight/jump word/WORD before cursor (carattere su cui sto escluso)
("n") y/d/v w           delete/yank/highlight/jump word/WORD until next(incluso)
("n") y/d/v e           delete/yank/highlight/jump next word (incluso)
("n") y/d/v E           delete/yank/highlight/jump next WORD (incluso)
("n") y/d/v E           delete/yank/highlight/jump next WORD (incluso)
("n") m/M               delete/yank/highlight/jump move to the end of the previous word/WORD (incluso)
("n") x
("n") X

--cmp
<C-cc>  close
<tab>   confirm
<C-n>   select_next_item
<C-p>   select_prev_item


--harpoon
("n") leader-a      append to harpoon list
("n") C-h           toggle harpoon menu
("n") C-d           next appended item
("n") C-f           prev appended item


--hop da implementare


-- quality of life
("n")("v") sa     add surrounding cosa
("n")("v") ds     delete surrounding
("n")("v") sfr    find surrounding to the right
("n")("v") sfl    find surrounding to the left
("n")("v") sr     replace surrounding + i/a + cosa
("n")      sj     toggle split/join between braches 

-- telescope

'wild 	exact-match (quoted) 	Items that include wild
^music 	prefix-exact-match 	Items that start with music
.mp3$ 	suffix-exact-match 	Items that end with .mp3
!fire 	inverse-exact-match 	Items that do not include fire
!^music 	inverse-prefix-exact-match 	Items that do not start with music
!.mp3$ 	inverse-suffix-exact-match 	Items that do not end with .mp3

A single bar character term acts as an OR operator.

("n") leader-ff     find file
("n") leader-lg     live grep
("n") leader-sg     grep string under cursor
("n") leader-sd     search diagnostic messages
("n") leader-/      search cuffer buffer
-- all'interno della finestra di telescope
("n") gg/G 	        Select the top/bottom item 
("n") H/M/L 	    Select top/Middle/bottom 
("n") j/k 	        Next/previous 
("i") <C-p>/<C-n> 	Previous/Next item
("i")("n") <CR> 	Confirm selection
("i")("n") <C-x> 	Go to file selection as a split
("i")("n") <C-v> 	Go to file selection as a vsplit
("i")("n") <C-t> 	Go to a file in a new tab

--treesitter in visual mode extend 
("n")("v") d/c/y of     outer function 
("n")("v") d/c/y if     inner function
("n")("v") d/c/y os     outer class 
("n")("v") d/c/y is     inner class 
("n")("v") d/c/y ol     outer loop 
("n")("v") d/c/y il     inner loop 
("n")("v") d/c/y op     outer parameter 
("n")("v") d/c/y ip     inner parameter 
("n")("v") d/c/y oc     outer conditional 
("n")("v") d/c/y ic     inner conditional 
("n")("v") d/c/y a"     whole double quoted string
("n")("v") d/c/y i"		inner double quoted string 
("n")("v") d/c/y a'		whole single quoted string
("n")("v") d/c/y i'		inner single quoted string 
("n")("v") d/c/y a<		whole '<' to '>'
("n")("v") d/c/y i<		inner '<' to '>' 
("n")("v") d/c/y a`		whole string in backticks
("n")("v") d/c/y i`		inner string in backticks 
("n")("v") d/c/y aB		whole "{" to "}" 
("n")("v") d/c/y iB		inner "{" and "}"
("n")("v") d/c/y ab		whole "(" to ")"
("n")("v") d/c/y ib		inner "(" to ")"
("n")("v") d/c/y a[		whole '[' to ']'
("n")("v") d/c/y i[		inner '[' to ']' 
("n")("v") d/c/y ap		paragraph with white space
("n")("v") d/c/y ip		inner paragraph without white space
("n")("v") d/c/y as		whole sentence with white space
("n")("v") d/c/y is		inner sentence without white space
("n")("v") d/c/y at		whole tag block //for ml
("n")("v") d/c/y it		inner tag block
("n")("v") d/c/y aW		whole WORD with white space
("n")("v") d/c/y iW		inner WORD
("n")("v") d/c/y aw		whole word with white space
("n")("v") d/c/y iw		inner word

-- [[ word vs WORD
This "stuff" is not-so difficult!
wwww  wwwww  ww www ww wwwwwwwww  
WWWW WWWWWWW WW WWWWWW WWWWWWWWWW
]]


("n") ] + o/i/ + (f,s,c,l,p) goto_next_start 
("n") ] + (f,s,c,l,p) + o/i  goto_next_end 
("n") [ + o/i/ + (f,s,c,l,p) goto_previous_start
("n") [ + (f,s,c,l,p) + o/i  goto_previous_end 
("n") ' + o/i/ + (f,s,c,l,p) goto_next
("n") ' + (f,s,c,l,p) + o/i  goto_previous

--trouble
<leader>tt  Diagnostics
<leader>tb  Buffer Diagnostics
<leader>ts  Diagnostics Symbols 
<leader>tl  LSP Definitions / references / ... 
<leader>tl  Location List 
<leader>tq  Quickfix List

-- undotree
("n") leader u    undotree toggle{
  j move next
  k move prev
  gj move2 parent
  J move change next
  K move change prev
  invio conferma
  q quit
}





-- da implementare totalmente
-- git 
("n") leader-gs     comando git
("n") leader-gg     git graph








--debugger da implementare


--lsp 
("n")("v") leader-ca       code action menu 
("n") gd                   go definition
("n") gD                   go declaration
("n") gr                   go references
("n") gi                   go implementation
("n") leader-D             type definition
("n") K                    piu' spiegazioni
("n") leader-wa            add workspace folder al buffer
("n") leader-wr            remove workspace folder dal buffer
("n") leader-wl            lista tutti i workspace folder
("n") leader-rn            rinomina parola sotto il cursore in tutti i buffer
("n") leader-fo            format file
